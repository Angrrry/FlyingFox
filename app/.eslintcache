[{"/home/akshat/.local/FlyingFox/app/src/index.js":"1","/home/akshat/.local/FlyingFox/app/src/App.js":"2","/home/akshat/.local/FlyingFox/app/src/reportWebVitals.js":"3","/home/akshat/.local/FlyingFox/app/src/serviceWorker.js":"4","/home/akshat/.local/FlyingFox/app/src/Logo.js":"5","/home/akshat/.local/FlyingFox/app/src/ColorModeSwitcher.js":"6","/home/akshat/.local/FlyingFox/app/src/components/generate.js":"7","/home/akshat/.local/FlyingFox/app/src/components/color-field.js":"8","/home/akshat/.local/FlyingFox/app/src/data.js":"9","/home/akshat/.local/FlyingFox/app/src/components/number-field.js":"10","/home/akshat/.local/FlyingFox/app/src/components/browser/browser-preview.js":"11","/home/akshat/.local/FlyingFox/app/src/components/browser/icon-wrapper.js":"12","/home/akshat/.local/FlyingFox/app/src/components/palette/palette-group.js":"13","/home/akshat/.local/FlyingFox/app/src/components/palette/palette.js":"14","/home/akshat/.local/FlyingFox/app/src/components/button-pair.js":"15"},{"size":840,"mtime":1610234700952,"results":"16","hashOfConfig":"17"},{"size":336,"mtime":1610348658056,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610234700952,"results":"19","hashOfConfig":"17"},{"size":5081,"mtime":1610234700952,"results":"20","hashOfConfig":"17"},{"size":489,"mtime":1610234700952,"results":"21","hashOfConfig":"17"},{"size":617,"mtime":1610234700952,"results":"22","hashOfConfig":"17"},{"size":5929,"mtime":1610653163601,"results":"23","hashOfConfig":"17"},{"size":1244,"mtime":1610352596556,"results":"24","hashOfConfig":"17"},{"size":1422,"mtime":1610353003490,"results":"25","hashOfConfig":"17"},{"size":1555,"mtime":1610342788188,"results":"26","hashOfConfig":"17"},{"size":3326,"mtime":1610649819926,"results":"27","hashOfConfig":"17"},{"size":515,"mtime":1610591553916,"results":"28","hashOfConfig":"17"},{"size":591,"mtime":1610612613878,"results":"29","hashOfConfig":"17"},{"size":308,"mtime":1610619993125,"results":"30","hashOfConfig":"17"},{"size":1224,"mtime":1610653314010,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ogho6x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"/home/akshat/.local/FlyingFox/app/src/index.js",[],["72","73"],"/home/akshat/.local/FlyingFox/app/src/App.js",["74","75","76"],"import React from 'react';\nimport {\n  ChakraProvider,\n  CSSReset,\n  theme,\n  ThemeProvider,\n} from '@chakra-ui/react';\nimport colors from './colors.json';\nimport Generator from './components/generate';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Generator />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/home/akshat/.local/FlyingFox/app/src/reportWebVitals.js",[],"/home/akshat/.local/FlyingFox/app/src/serviceWorker.js",[],"/home/akshat/.local/FlyingFox/app/src/Logo.js",[],"/home/akshat/.local/FlyingFox/app/src/ColorModeSwitcher.js",[],["77","78"],"/home/akshat/.local/FlyingFox/app/src/components/generate.js",["79","80","81","82","83","84","85","86","87"],"import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Input,\n  Text,\n  Stack,\n  Grid,\n  VStack,\n  HStack,\n  Divider,\n  Flex,\n  Spacer,\n  Container,\n} from '@chakra-ui/react';\nimport {\n  RiBrush3Fill,\n  RiCodeSSlashFill,\n  RiFirefoxFill,\n  RiPaletteFill,\n  RiSideBarFill,\n  RiSoundModuleFill,\n  RiSpyFill,\n} from 'react-icons/ri';\nimport data from '../data';\nimport colors from '../colors.json';\nimport ColorField from './color-field';\nimport NumberField from './number-field';\nimport BrowserPreview from './browser/browser-preview';\nimport PaletteGroup from './palette/palette-group';\nimport ButtonPair from './button-pair';\n\nfunction Generator() {\n  const colorCallback = (value, name) => {\n    // check if valid\n    if (name == 'Dark') {\n      setDark(value);\n    } else if (name == 'Light') {\n      setLight(value);\n    }\n    // TODO: handle other colors\n  };\n  const setDefaultPalette = (name, type) => {\n    let d = colors[type][name];\n    let arr = [];\n    for (const s in d) {\n      if (s.endsWith('base')) continue;\n      arr.push(d[s]);\n    }\n    return arr;\n  };\n\n  const [selectedConfig, setSelectedConfig] = useState(0);\n  const [selectedView, setSelectedView] = useState(0);\n  const [dark, setDark] = useState(colors.main.dark['--dark-base']);\n  const [light, setLight] = useState(colors.main.light['--light-base']);\n  const [darkPalette, setDarkPalette] = useState(\n    setDefaultPalette('dark', 'main')\n  );\n  const [lightPalette, setLightPalette] = useState(\n    setDefaultPalette('light', 'main')\n  );\n  const [otherPalette, setOtherPalette] = useState(\n    setDefaultPalette('other', 'main')\n  );\n\n  const colorFields = data.colorField.main;\n  const colorFieldsPrivate = data.colorField.private;\n\n  return (\n    <Stack direction=\"row\" spacing={0}>\n      <Box\n        w=\"30%\"\n        minW=\"440px\"\n        maxW=\"560px\"\n        h=\"auto\"\n        bg=\"white\"\n        p=\"8\"\n        overflowY=\"auto\"\n      >\n        <ButtonPair\n          content={[RiPaletteFill, RiSoundModuleFill]}\n          bg={{\n            selected: [otherPalette[2], otherPalette[2]],\n            regular: 'gray.100',\n          }}\n          selected={selectedConfig}\n          onClick={setSelectedConfig}\n          icon\n        />\n        <HStack\n          spacing={2}\n          mb={4}\n          fontSize=\"xl\"\n          color=\"gray.600\"\n          alignSelf=\"start\"\n        >\n          <RiFirefoxFill />\n          <Text fontWeight=\"bold\">Main</Text>\n        </HStack>\n        <VStack spacing={6} p=\"2\" marginX={4} mb={8}>\n          {colorFields.map(cf => (\n            <ColorField\n              name={cf.name}\n              onChange={colorCallback}\n              default={cf.default}\n            />\n          ))}\n        </VStack>\n        <Divider mb={8} />\n        <HStack\n          spacing={2}\n          mb={4}\n          fontSize=\"xl\"\n          color=\"gray.600\"\n          alignSelf=\"start\"\n        >\n          <RiSpyFill />\n          <Text fontWeight=\"bold\">Private Mode</Text>\n        </HStack>\n        <VStack spacing={6} p=\"2\" marginX={4} mb={8}>\n          {colorFieldsPrivate.map(cf => (\n            <ColorField\n              name={cf.name}\n              onChange={colorCallback}\n              default={cf.default}\n            />\n          ))}\n        </VStack>\n        <Divider mb={8} />\n        <HStack\n          spacing={2}\n          mb={4}\n          fontSize=\"xl\"\n          color=\"gray.600\"\n          alignSelf=\"start\"\n        >\n          <RiSideBarFill />\n          <Text fontWeight=\"bold\">Sidebar</Text>\n        </HStack>\n        <VStack spacing={6} p=\"2\" marginX={4} mb={8}>\n          {data.sidebarWidths.map(cf => (\n            <NumberField\n              name={cf.name}\n              type=\"width\"\n              subtext={cf.subtext}\n              onChange={colorCallback}\n              default={cf.default.replace('px', '')}\n              unit=\"px\"\n            />\n          ))}\n        </VStack>\n      </Box>\n      <Box\n        w={{ lg: '70%', md: '60%', sm: '100%' }}\n        h=\"100vh\"\n        p=\"8\"\n        bg={lightPalette[1]}\n        pos=\"fixed\"\n        right={{ md: '0', sm: '-100%' }}\n      >\n        <Flex w=\"100%\">\n          <ButtonPair\n            content={[RiFirefoxFill, RiSpyFill]}\n            bg={{\n              selected: [otherPalette[3], otherPalette[3]],\n              regular: lightPalette[3],\n            }}\n            selected={selectedView}\n            onClick={setSelectedView}\n            icon\n          />\n          <Spacer />\n          <ButtonPair\n            content={[RiBrush3Fill, RiCodeSSlashFill]}\n            bg={{\n              selected: [otherPalette[0], otherPalette[0]],\n              regular: lightPalette[3],\n            }}\n            alignSelf=\"end\"\n            selected={selectedView}\n            onClick={setSelectedView}\n            icon\n          />\n        </Flex>\n        <Container\n          maxW=\"100%\"\n          pos=\"absolute\"\n          left=\"50%\"\n          top=\"50%\"\n          transform=\"translate(-50%, -50%)\"\n          centerContent\n        >\n          <BrowserPreview\n            dark={dark}\n            darkPalette={darkPalette}\n            light={light}\n            lightPalette={lightPalette}\n            red={otherPalette[3]}\n            yellow={otherPalette[1]}\n            green={otherPalette[2]}\n          >\n            <VStack\n              paddingY={12}\n              w=\"100%\"\n              spacing={8}\n              mt={2}\n              borderTop={`solid 2px ${darkPalette[0]}`}\n            >\n              <PaletteGroup\n                colors={[dark, light]}\n                contrast={darkPalette[3]}\n                detached\n              />\n              <PaletteGroup colors={lightPalette} />\n              <PaletteGroup colors={darkPalette} />\n              <PaletteGroup colors={otherPalette} detached />\n            </VStack>\n          </BrowserPreview>\n        </Container>\n      </Box>\n    </Stack>\n  );\n}\n\nexport default Generator;\n","/home/akshat/.local/FlyingFox/app/src/components/color-field.js",["88","89","90"],"import React, { useState } from 'react';\nimport { Box, Input, Text, HStack } from '@chakra-ui/react';\nimport { RiContrast2Fill, RiContrast2Line, RiPaintFill } from 'react-icons/ri';\n\nfunction ColorField(props) {\n  const [value, setValue] = React.useState(props.default);\n  const handleChange = event => {\n    let v = event.target.value;\n    v = v[0] !== '#' ? '#' + v : v;\n    v = v[0] === '#' && v[1] === '#' ? v.substring(1) : v;\n    v.toLowerCase();\n    setValue(v);\n    if (/^#[0-9A-F]{6}$/i.test(v) || /^#([0-9A-F]{3}){1,2}$/i.test(v)) {\n      props.onChange(v, props.name);\n    }\n  };\n  let icon;\n  if (props.name == 'Dark') {\n    icon = <RiContrast2Fill />;\n  } else if (props.name == 'Light') {\n    icon = <RiContrast2Line />;\n  } else {\n    icon = <RiPaintFill />;\n  }\n  // TODO: onblur to generate palette when lost focus\n  return (\n    <Box width=\"100%\" color=\"gray.600\">\n      <HStack spacing={2} float=\"left\">\n        {icon}\n        <Text size=\"md\">{props.name}</Text>\n      </HStack>\n      <Input\n        width=\"130px\"\n        size=\"sm\"\n        float=\"right\"\n        value={value}\n        borderRadius=\"md\"\n        onChange={handleChange}\n        placeholder={props.default}\n      />\n    </Box>\n  );\n}\n\nexport default ColorField;\n","/home/akshat/.local/FlyingFox/app/src/data.js",[],"/home/akshat/.local/FlyingFox/app/src/components/number-field.js",["91","92","93"],"import React, { useState } from 'react';\nimport {\n  Box,\n  InputGroup,\n  InputRightAddon,\n  NumberInput,\n  NumberInputField,\n  Text,\n  HStack,\n  VStack,\n} from '@chakra-ui/react';\nimport { AiOutlineColumnWidth } from 'react-icons/ai';\nimport { RiTimeFill } from 'react-icons/ri';\n\nfunction NumberField(props) {\n  const [value, setValue] = React.useState(props.default);\n  const handleChange = event => {\n    let v = event.target.value;\n    setValue(v);\n    if (/^#[0-9A-F]{6}$/i.test(v) || /^#([0-9A-F]{3}){1,2}$/i.test(v)) {\n      props.onChange(v, props.name);\n    }\n  };\n  let icon;\n  if (props.type == 'width') {\n    icon = <AiOutlineColumnWidth />;\n  } else if (props.type == 'time') {\n    icon = <RiTimeFill />;\n  } else {\n  }\n  return (\n    <Box width=\"100%\" color=\"gray.600\">\n      <VStack spacing={1} float=\"left\" textAlign=\"left\">\n        <HStack spacing={2} alignSelf=\"start\">\n          {icon}\n          <Text>{props.name}</Text>\n        </HStack>\n        <Text fontSize=\"xs\" color=\"gray.400\" alignSelf=\"start\">\n          {props.subtext}\n        </Text>\n      </VStack>\n      <NumberInput float=\"right\" value={value}>\n        <InputGroup size=\"sm\" w=\"130px\">\n          <NumberInputField\n            type=\"number\"\n            w=\"80px\"\n            size=\"sm\"\n            borderLeftRadius=\"md\"\n            onChange={handleChange}\n            placeholder={props.default}\n          />\n          <InputRightAddon borderRightRadius=\"md\" children={props.unit} />\n        </InputGroup>\n      </NumberInput>\n    </Box>\n  );\n}\n\nexport default NumberField;\n","/home/akshat/.local/FlyingFox/app/src/components/browser/browser-preview.js",["94"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\nimport {\n  RiArrowLeftSLine,\n  RiArrowRightSLine,\n  RiBookMarkFill,\n  RiBookmarkLine,\n  RiCheckboxBlankCircleFill,\n  RiHome5Fill,\n  RiLock2Fill,\n  RiMenu3Fill,\n  RiMore2Fill,\n  RiRestartLine,\n  RiShieldFlashFill,\n} from 'react-icons/ri';\nimport IconWrapper from './icon-wrapper';\n\nfunction setTitlebarControlStyles(color) {\n  return { color: color, opacity: 0.8 };\n}\nfunction BrowserPreview(props) {\n  let spacing = { sm: 1, md: 0, lg: 2 };\n  return (\n    <Box\n      w=\"90%\"\n      maxW=\"1200px\"\n      minH=\"50vh\"\n      bg={props.dark}\n      boxShadow=\"dark-lg\"\n      p={2}\n      borderRadius=\"lg\"\n    >\n      <Flex>\n        <HStack spacing={spacing} ml={spacing} fontSize=\"sm\">\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.red)}\n          />\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.yellow)}\n          />\n          <RiCheckboxBlankCircleFill\n            style={setTitlebarControlStyles(props.green)}\n          />\n          <HStack pl={spacing} spacing={1}>\n            <IconWrapper\n              size=\"lg\"\n              color={props.light}\n              hover_bg={props.darkPalette[2]}\n            >\n              <RiArrowLeftSLine />\n            </IconWrapper>\n            <IconWrapper\n              size=\"lg\"\n              color={props.light}\n              hover_bg={props.darkPalette[2]}\n            >\n              <RiArrowRightSLine />\n            </IconWrapper>\n            <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n              <RiRestartLine />\n            </IconWrapper>\n            <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n              <RiHome5Fill />\n            </IconWrapper>\n          </HStack>\n        </HStack>\n        <Spacer />\n        <Flex\n          minW={{ sm: 'auto', md: '30%', lg: '50%' }}\n          borderRadius=\"md\"\n          p={1}\n          bg={props.darkPalette[1]}\n        >\n          <IconWrapper\n            size=\"xs\"\n            color={props.light}\n            hover_bg={props.darkPalette[2]}\n          >\n            <RiLock2Fill />\n          </IconWrapper>\n          <Spacer />\n          <Box\n            w=\"40%\"\n            alignSelf=\"center\"\n            h=\"12px\"\n            bg={props.lightPalette[2]}\n            borderRadius=\"lg\"\n          />\n          <Spacer />\n          <IconWrapper\n            size=\"xs\"\n            color={props.light}\n            hover_bg={props.darkPalette[2]}\n          >\n            <RiBookmarkLine />\n          </IconWrapper>\n        </Flex>\n        <Spacer />\n        <HStack spacing={1}>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiBookMarkFill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiShieldFlashFill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiMore2Fill />\n          </IconWrapper>\n          <IconWrapper color={props.light} hover_bg={props.darkPalette[2]}>\n            <RiMenu3Fill />\n          </IconWrapper>\n        </HStack>\n      </Flex>\n      {props.children}\n    </Box>\n  );\n}\n\nexport default BrowserPreview;\n","/home/akshat/.local/FlyingFox/app/src/components/browser/icon-wrapper.js",[],"/home/akshat/.local/FlyingFox/app/src/components/palette/palette-group.js",["95","96","97","98"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\nimport Palette from './palette';\n\nfunction PaletteGroup(props) {\n  return (\n    <HStack\n      bg={props.contrast ? props.contrast : ''}\n      p={props.contrast ? 4 : ''}\n      boxShadow={props.detached ? '' : 'lg'}\n      borderRadius=\"md\"\n      overflow={props.detached ? '' : 'hidden'}\n      spacing={props.detached ? 6 : 0}\n    >\n      {props.colors.map(c => {\n        return <Palette color={c} detached={props.detached} />;\n      })}\n    </HStack>\n  );\n}\n\nexport default PaletteGroup;\n","/home/akshat/.local/FlyingFox/app/src/components/palette/palette.js",["99","100","101","102"],"import React, { useState } from 'react';\nimport { Flex, Box, HStack, Spacer } from '@chakra-ui/react';\n\nfunction Palette(props) {\n  return (\n    <Box\n      boxSize=\"8vmin\"\n      borderRadius={props.detached ? 'md' : ''}\n      boxShadow=\"lg\"\n      bg={props.color}\n    ></Box>\n  );\n}\n\nexport default Palette;\n","/home/akshat/.local/FlyingFox/app/src/components/button-pair.js",["103","104","105","106","107","108"],"import React, { useState } from 'react';\nimport { ButtonGroup, Button } from '@chakra-ui/react';\n\nfunction ButtonPair(props) {\n  let { selected: c_sel, regular: c_reg } = props.color\n    ? props.color.selected\n    : {};\n  let { selected: b_sel, regular: b_reg } = props.bg;\n  let shadow = `0 5px 25px -10px ${b_sel[0]}A0, -5px 0 10px -5px ${b_sel[0]}A0, 5px 0 10px -5px ${b_sel[0]}A0`;\n  return (\n    <ButtonGroup\n      alignSelf={props.alignSelf}\n      mb={8}\n      colorScheme=\"gray\"\n      size=\"sm\"\n    >\n      {props.content.map((c, i) => {\n        return (\n          <Button\n            bgGradient={\n              props.selected == i ? `linear(to-r,${b_sel[0]},${b_sel[1]})` : ''\n            }\n            bg=\"transparent\"\n            boxShadow={props.selected == i ? shadow : 'none'}\n            color={props.selected == i ? c_sel : c_reg}\n            _hover={\n              props.selected == i\n                ? { background: '' }\n                : { background: 'gray.300' }\n            }\n            _focus={{ border: 'none' }}\n            onClick={() => props.onClick(i)}\n          >\n            {props.icon ? c() : c}\n          </Button>\n        );\n      })}\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonPair;\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":3,"nodeType":"115","messageId":"116","endLine":4,"endColumn":11},{"ruleId":"113","severity":1,"message":"117","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":16},{"ruleId":"113","severity":1,"message":"118","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"121","line":4,"column":3,"nodeType":"115","messageId":"116","endLine":4,"endColumn":9},{"ruleId":"113","severity":1,"message":"122","line":5,"column":3,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"123","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":8},{"ruleId":"113","severity":1,"message":"124","line":9,"column":3,"nodeType":"115","messageId":"116","endLine":9,"endColumn":7},{"ruleId":"125","severity":1,"message":"126","line":37,"column":14,"nodeType":"127","messageId":"128","endLine":37,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":39,"column":21,"nodeType":"127","messageId":"128","endLine":39,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":58,"column":23,"nodeType":"115","messageId":"116","endLine":58,"endColumn":37},{"ruleId":"113","severity":1,"message":"130","line":61,"column":24,"nodeType":"115","messageId":"116","endLine":61,"endColumn":39},{"ruleId":"113","severity":1,"message":"131","line":64,"column":24,"nodeType":"115","messageId":"116","endLine":64,"endColumn":39},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":18,"column":18,"nodeType":"127","messageId":"128","endLine":18,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":20,"column":25,"nodeType":"127","messageId":"128","endLine":20,"endColumn":27},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":25,"column":18,"nodeType":"127","messageId":"128","endLine":25,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":27,"column":25,"nodeType":"127","messageId":"128","endLine":27,"endColumn":27},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"134","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"135","line":2,"column":29,"nodeType":"115","messageId":"116","endLine":2,"endColumn":35},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"136","line":2,"column":21,"nodeType":"115","messageId":"116","endLine":2,"endColumn":27},{"ruleId":"113","severity":1,"message":"135","line":2,"column":29,"nodeType":"115","messageId":"116","endLine":2,"endColumn":35},{"ruleId":"113","severity":1,"message":"132","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"137","line":8,"column":35,"nodeType":"115","messageId":"116","endLine":8,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":21,"column":30,"nodeType":"127","messageId":"128","endLine":21,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":24,"column":39,"nodeType":"127","messageId":"128","endLine":24,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":25,"column":35,"nodeType":"127","messageId":"128","endLine":25,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":27,"column":30,"nodeType":"127","messageId":"128","endLine":27,"endColumn":32},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'CSSReset' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'colors' is defined but never used.",["138"],["139"],"'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Input' is defined but never used.","'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setDarkPalette' is assigned a value but never used.","'setLightPalette' is assigned a value but never used.","'setOtherPalette' is assigned a value but never used.","'useState' is defined but never used.","'Flex' is defined but never used.","'Box' is defined but never used.","'Spacer' is defined but never used.","'HStack' is defined but never used.","'b_reg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]